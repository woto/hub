image: docker/compose:latest

services:
  - docker:dind

stages:
  - build
  - test
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CI_REGISTRY_USER: oganer@gmail.com
  CI_REGISTRY_PASSWORD: qweQWE123!@#
  CI_REGISTRY: registry.nv6.ru:5000

before_script:
  - echo docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - mv $CI_PROJECT_DIR/.env.gitlab $CI_PROJECT_DIR/.env
  - chmod 600 $CI_PROJECT_DIR/docker/traefik/letsencrypt/acme.json

build:
  stage: build
  script:
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml -f docker-compose.gitlab.yml -f docker-compose.engineer.yml pull
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml -f docker-compose.gitlab.yml -f docker-compose.engineer.yml build # --parallel
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml -f docker-compose.gitlab.yml -f docker-compose.engineer.yml push
    - export version=$CI_COMMIT_SHORT_SHA
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml -f docker-compose.gitlab.yml -f docker-compose.engineer.yml build # --parallel
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml -f docker-compose.gitlab.yml -f docker-compose.engineer.yml push
  tags:
    - docker

rubocop:
  stage: test
  allow_failure: true
  script:
    - export version=$CI_COMMIT_SHORT_SHA
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml pull
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml run --rm rails bundle exec rubocop
  tags:
    - docker

rspec:
  stage: test
  allow_failure: true
  script:
    - export version=$CI_COMMIT_SHORT_SHA
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml pull
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml up -d traefik postgres redis_oauth redis_cable redis_cache elastic
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml run --rm rails bundle exec rake db:test:prepare
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml run --rm rails bundle exec rspec
  tags:
    - docker

puppeteer:
  stage: test
  allow_failure: true
  script:
    - export version=$CI_COMMIT_SHORT_SHA
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml -f docker-compose.gitlab.yml -f docker-compose.engineer.yml pull
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml up -d traefik postgres redis_oauth redis_cable redis_cache rails elastic
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml run --rm rails bundle exec rake db:setup
    - docker-compose -f docker-compose.engineer.yml run --rm alpine sh -c "curl https://\$DOMAIN_NAME"
    - docker-compose -f docker-compose.engineer.yml run --rm alpine sh -c "curl https://\$DOMAIN_NAME/api/v1/staff/seeder/elastic/pagination"
    - docker-compose -f docker-compose.gitlab.yml run --rm puppeteer
  tags:
    - docker

deploy to production:
  stage: deploy
  environment: production
  when: manual
  script:
    - apk add --no-cache --update openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml -f docker-compose.gitlab.yml -f docker-compose.engineer.yml pull
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml -f docker-compose.gitlab.yml -f docker-compose.engineer.yml build
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml -f docker-compose.gitlab.yml -f docker-compose.engineer.yml push

    - cp .env.production .env
    - export version=production
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml -f docker-compose.gitlab.yml -f docker-compose.engineer.yml -f docker-compose.production.yml build # --parallel
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml -f docker-compose.gitlab.yml -f docker-compose.engineer.yml -f docker-compose.production.yml push

    - export DOCKER_HOST="ssh://root@nv6.ru"
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml -f docker-compose.production.yml pull
    - docker-compose -f docker-compose.yml -f docker-compose.rails.yml -f docker-compose.production.yml up --force-recreate -d
  tags:
    - docker
