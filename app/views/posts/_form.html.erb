<%= content_tag :div, data: { controller: 'posts-form',
                              action:
                                  'beforeunload@window->posts-form#AskConfirmationOnBeforeunload
                                   trix-initialize@document->posts-form#addToolbarButtonOnTrixInitialize
                                   trix-action-invoke@document->posts-form#openModalOnTrixActionInvoke
                                   trix-document-change@document->posts-form#markAsDirtyOnTrixChange
                                   load@window->posts-form#openModalOnPageLoad
                                   posts-realm:postRealmIdChange->posts-form#handlePostRealmIdChange'
} do %>

  <%# posts-language:setPostLanguageData->posts-form#setPostLanguageData' %>

  <%= simple_form_for(@post,
                      wrapper_mappings: {
                          check_boxes:    :vertical_collection,
                          radio_buttons:  :vertical_collection,
                          file:           :custom_file,
                          boolean:        :custom_boolean_switch
                      }) do |f| %>
    <%= f.error_notification %>
    <%= f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present? %>

    <div class="card">
      <div class="card-body">
        <div class="form-inputs">

          <%= f.input :title,
                      wrapper_html: {class: 'mb-3 col-xl-10'},
                      label_html: { :class => "mb-2" } %>

          <%# f.input :language, as: :select,
                      wrapper_html: {class: 'mb-3 col-xl-10'},
                      label_html: { :class => "mb-2" },
                      collection: Rails.configuration.global[:languages].map { |lng| [lng[:language], lng[:english_name]] },
                      input_html: { data: { controller: 'posts-language' }},
                      selected: f.object.language
          %>

          <%= f.association :realm, as: :select,
                      wrapper_html: {class: 'mb-3 col-xl-10'},
                      label_html: { :class => "mb-2" },
                      input_html: {
                          data: {
                              controller: 'posts-realm',
                              posts_realm_realm_change_question: t('Are you sure?')
                          }
                      },
                      include_blank: true,
                      placeholder: true
          %>

          <%= f.association :post_category, as: :select,
                      input_html: {
                          data: {
                              controller: 'posts-category',
                              posts_category_realm_id: @post.realm_id
                          }
                      },
                      wrapper_html: {class: 'mb-3 col-xl-10'},
                      label_html: { class: "mb-2" },
                      placeholder: true,
                      collection: PostCategory.where(id: f.object.post_category_id).map { |post|
                        # title = _1.title_i18n[@post.language.to_s]
                        # [_1[:title], _1[:id], data: { data: {title: title, path: "_1.path.pluck(:title).join(' > ')" } }]
                        [
                            post.title,
                            post.id,
                            data: {
                                data: {
                                    title: post.title,
                                    path: post.path.pluck(:title).join(' > ')
                                }
                            }
                        ]
                      },
                      selected: f.object.post_category_id
          %>

          <%= f.input :tags, as: :select,
                      input_html: {
                          multiple: true,
                          data: {
                              controller: 'posts-tags',
                              posts_tags_realm_id: @post.realm_id
                          },
                      },
                      wrapper_html: { class: 'mb-3 col-xl-10' },
                      collection: f.object.tags,
                      placeholder: true
          %>

          <%= f.input :published_at, as: :string,
                      wrapper_html: { class: 'mb-3 col-xl-10' },
                      input_html: {
                        data: {
                            controller: "flatpickr"
                        }
                      }
          %>

          <div class="mb-3">
            <%= f.input :intro,
                        as: :rich_text_area,
                        input_html: { class: 'trix-content fs-6 lh-lg', data: { target: 'posts-form.editor' } },
                        placeholder: true,
                        wrapper_html: { class: 'col-xl-10' }
            %>
          </div>

          <div class="mb-3">
            <%= f.input :body,
                        as: :rich_text_area,
                        input_html: { class: 'trix-content fs-6 lh-lg', data: { target: 'posts-form.editor' } },
                        placeholder: true,
                        wrapper_html: { class: 'col-xl-10' }
            %>
          </div>

          <%= f.input :status,
                      as: :radio_buttons,
                      collection: [
                          ([t('.statuses.draft'), 'draft'] if PostStatusesPolicy.new(current_user, @post).to_draft?),
                          ([t('.statuses.pending'), 'pending'] if PostStatusesPolicy.new(current_user, @post).to_pending?),
                      ].compact,
                      wrapper: :vertical_collection_inline,
                      wrapper_html: {class: 'mb-3 col-xl-10'}
          %>

        </div>
      </div>
    </div>

    <div class="card my-3 col-lg-6">
      <div class="card-status-left bg-warning"></div>
      <div class="card-body">
        <div class="card-title align-items-center d-flex">
          <%= t('.post_price_settings') %>
        </div>
        <% Rails.configuration.global[:post_extra_options].each do |option_title, option_settings| %>
          <%= f.simple_fields_for :extra_options do |extra| %>
            <%= extra.input option_title.to_sym,
                            as: option_settings[:type],
                            checked: f.object.extra_options&.dig(option_title.to_s),
                            item_wrapper_class: 'mt-0',
                            item_label_class: 'ms-2',
                            wrapper_html: {class: 'my-3 col-xl-10'},
                            collection: option_settings[:values].pluck(:title).map { |a| [t(a, scope: ['posts', 'settings', option_title.to_sym]), a]}
            %>
          <% end %>
        <% end %>
        <small class="text-muted"><%= t('.post_price_hint') %></small>
      </div>
    </div>

    <% if PostStatusesPolicy.new(current_user, @post).to_accrued? ||
        PostStatusesPolicy.new(current_user, @post).to_rejected? ||
        PostStatusesPolicy.new(current_user, @post).to_canceled?
    %>
      <div class="card my-3 col-lg-6">
        <div class="card-status-left bg-warning"></div>
        <div class="card-body">
          <h3 class="card-title">
            <%= t('.moderation_status') %>
          </h3>
          <%= f.input :status,
                      as: :radio_buttons,
                      collection: [
                          ([t('.statuses.accrued'), 'accrued'] if PostStatusesPolicy.new(current_user, @post).to_accrued?),
                          ([t('.statuses.rejected'), 'rejected'] if PostStatusesPolicy.new(current_user, @post).to_rejected?),
                          ([t('.statuses.canceled'), 'canceled'] if PostStatusesPolicy.new(current_user, @post).to_canceled?)
                      ].compact,
                      label: false,
                      include_hidden: false,
                      wrapper: :vertical_boolean,
                      hint: t('.moderation_parting_words')
          %>

          <%= f.input :comment %>
        </div>
      </div>
    <% end %>

    <div class="form-actions">
      <%= f.button :submit, class: 'btn btn-primary', data:{
          action: 'posts-form#sendForm'
      } %>
      <%= link_to 'Back', posts_path, class: "btn btn-white" %>
    </div>

  <% end %>

  <%= render 'modal_embed' %>

<% end %>
