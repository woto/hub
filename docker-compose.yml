version: '3.7'
services:

  nginx:
    image: nginx:alpine
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
      - "3035:3035"
    restart: always

  postgres:
    image: postgres
    env_file:
      - .env.dev

  certbot:
    image: certbot/certbot
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  swagger:
    image: swaggerapi/swagger-ui:v3.23.5
    environment:
      - BASE_URL=/swagger
      - URLS=[{"name":"swagger", "url":"project/swagger.json"}]
      - OAUTH2_REDIRECT_URL=https://nv6.ru/swagger/oauth2-redirect.html
    volumes:
      - ./docker/swagger:/usr/share/nginx/html/project
    depends_on:
      - nginx

  rails:
    build: .
    image: rails
    command: ["sh", "-c", "rm -f /tmp/server.pid && bin/rails s -b '0.0.0.0' --pid /tmp/server.pid"]
    env_file:
      - .env.dev
    volumes:
      - .:/usr/src/app"
    volumes:
      - ./:/usr/src/app
    depends_on:
      - nginx
      - postgres
    stdin_open: true
    tty: true
    expose: 
      - 3000

  webpacker:
    image: rails
    command: bin/webpack-dev-server
    env_file:
      - .env.dev
    volumes:
      - .:/usr/src/app
    expose:
      - 3035

  redis_cable:
    image: redis

  # This service may live separated per Rails application.
  # Data stored in this service should be considered as "don't be worried if it's lost"
  # because it could be retrivable from persist storages (postgres for example)
  redis_cache:
    image: redis

  redis_oauth:
    image: redis