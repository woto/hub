version: '3.7'
services:

  # WEB INGRESS
  nginx:
    env_file:
      - .env.dev
      - .env.local
    image: nginx:alpine
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
      - "3035:3035"
    restart: always

  # SSL CERTIFICATE
  certbot:
    env_file:
      - .env.dev
      - .env.local
    image: certbot/certbot
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  # API DOCS
  swagger:
    env_file:
      - .env.dev
      - .env.local
    image: swaggerapi/swagger-ui:v3.23.5
    environment:
      - BASE_URL=/swagger
      - URLS=[{"name":"swagger", "url":"project/swagger.json"}]
      - OAUTH2_REDIRECT_URL=https://nv6.ru/swagger/oauth2-redirect.html
    volumes:
      - ./docker/swagger:/usr/share/nginx/html/project
    depends_on:
      - nginx

  # MAIN APPLICATION
  rails:
    env_file:
      - .env.dev
      - .env.local
    build: .
    image: rails
    command: ["sh", "-c", "rm -f /tmp/server.pid && bin/rails s -b '0.0.0.0' --pid /tmp/server.pid"]
    depends_on:
      - nginx
      - postgres
      - redis_oauth
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"

  # ASSETS FOR APPLICATION
  webpacker:
    env_file:
      - .env.dev
      - .env.local
    image: rails
    command: bin/webpack-dev-server
    expose:
      - 3035

  # E2E tests
  puppeteer:
    env_file:
      - .env.dev
      - .env.local
    build:
      context: .
      dockerfile: ./docker/puppeteer/Dockerfile
    volumes:
      - "./docker/puppeteer/tests:/tests"
      - "./docker/puppeteer/screenshots:/screenshots"
    # command: "wait-for-it.sh -t 1 https://nv6.ru -- mocha --recursive /tests"
    command: "mocha --recursive /tests"

  # MONITORING
  netdata:
    env_file:
      - .env.dev
      - .env.local
    hostname: netdata.nv6.ru
    image: netdata/netdata
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  # MAIN DATABASE
  postgres:
    env_file:
      - .env.dev
      - .env.local
    image: postgres

  # FOR WEBSOCKETS
  redis_cable:
    env_file:
      - .env.dev
      - .env.local
    image: redis

  # This service may live separated per Rails application.
  # Data stored in this service should be considered as "don't be worried if it's lost"
  # because it could be retrivable from persist storages (postgres for example)
  # FOR CACHING
  redis_cache:
    env_file:
      - .env.dev
      - .env.local
    image: redis

  # FOR OMNIAUTH
  redis_oauth:
    env_file:
      - .env.dev
      - .env.local
    image: redis