version: "3.7"
services:

  scrapper:
    env_file:
      - .env
    build:
      context: ./docker/scrapper
      dockerfile: Dockerfile
    ports:
      - ${SCRAPPER_PORT}:4000

  iframely:
    env_file:
      - .env
    build:
      context: ./docker/iframely
      dockerfile: Dockerfile
    ports:
      - ${IFRAMELY_PORT}:8061

  elastic:
    env_file:
      - .env
    image: elasticsearch:7.10.1
    ports:
      - ${ELASTIC_REST_PORT}:9200
      - ${ELASTIC_CLUSTER_PORT}:9300
    environment:
      - discovery.type=single-node
      - path.repo=/tmp
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elastic:/usr/share/elasticsearch/data

  kibana:
    env_file:
      - .env
    image: kibana:7.9.2
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elastic:9200

  postgres:
    env_file:
      - .env
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - "postgres:/var/lib/postgresql/data"

  redis:
    env_file:
      - .env
    image: redis
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - "redis:/data"

  mailcatcher:
    env_file:
      - .env
    image: schickling/mailcatcher
    ports:
      - ${MAILCATCHER_WEB_PORT}:1080
      - ${MAILCATCHER_SMTP_PORT}:1025

  imgproxy:
    image: darthsim/imgproxy:latest
    environment:
      - IMGPROXY_FALLBACK_IMAGE_PATH=/volume/image-not-found.png
      - IMGPROXY_LOCAL_FILESYSTEM_ROOT=/volume/
      - IMGPROXY_ALLOW_ORIGIN=*
      - IMGPROXY_IGNORE_SSL_VERIFICATION=true
      - IMGPROXY_MAX_ANIMATION_FRAMES=1000
      - IMGPROXY_ENABLE_WEBP_DETECTION=true
      - IMGPROXY_ENFORCE_WEBP=true
      - IMGPROXY_LOG_LEVEL=debug
      - IMGPROXY_MAX_SRC_RESOLUTION=9999
      - IMGPROXY_MAX_SRC_FILE_SIZE=31457280
      - IMGPROXY_READ_TIMEOUT=20
      - IMGPROXY_WRITE_TIMEOUT=20
      - IMGPROXY_DOWNLOAD_TIMEOUT=10
      - IMGPROXY_ENABLE_AVIF_DETECTION=true
      - IMGPROXY_ENFORCE_AVIF=true
    volumes:
      - ./docker/imgproxy:/volume/
    ports:
      - ${IMGPROXY_PORT}:8080

  mosquitto:
    env_file:
      - .env
    image: eclipse-mosquitto
    volumes:
      - ./docker/mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
    ports:
      - ${MOSQUITTO_PORT}:1883

volumes:
  redis:
  postgres:
  elastic:
